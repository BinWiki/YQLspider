{"name":"Yqlspider","tagline":"使用YQLspider模拟服务器请求，或者抓取页面数据","body":"# jQuery YQLspider插件\r\n\r\n[代码查看](index.html)\r\n\r\n## 这个插件能干什么? :-)\r\n- 模拟服务器请求，如果你不喜欢操作数据库的话！\r\n- 抓取页面数据\r\n\r\n\r\n## 使用说明\r\n> 非常容易配置，只需3个参数\r\n- url对应的是要抓取页面的地址\r\n- selector代表抓取页面的选择器，\r\n- success为找取数据成功时的回调！\r\n\r\n## 如何使用？\r\n``` javascript\r\n// 从jb51.net获取JavaScript模块的pdf书籍链接\r\n$.YQLspider({\r\n\turl: 'http://www.jb51.net/books/',\r\n\tselector: '.panel-1 .list li a.title',\r\n\tsuccess: function(r){\r\n\t\tconsole.log('-----*****从jb51.net找取数据*****-----');\r\n\t\t\r\n\t\t// 数据源\r\n\t\tvar data = r.a;\r\n\t\tvar host = 'http://www.jb51.net';\r\n\t\tvar htmlStrArr = []\r\n\t\t$.each(data, function(idx, val){\r\n\t\t\tvar html = '<li><a href=\"'+ host + this.href + '\">' + this.title + '</a></li>';\r\n\t\t\thtmlStrArr.push(html);\r\n\t\t});\r\n\t\tvar htmlstr = htmlStrArr.join('');\r\n\t\t$('#navList').html(htmlStrArr);\r\n\t\t\r\n\t}\r\n});\r\n```\r\n\r\n\r\n## 注意\r\n即使url或者selector出错，YQL服务器最终也不会出错,但可能会返回这样的结果:\r\n\r\n``` json\r\n/**/jQuery214029177518015036474_1451403767322({\"query\":{\"count\":1,\"created\":\"2015-12-29T15:42:58Z\",\"lang\":\"en-US\",\"results\":{\"results\":null}}}});\r\n```\r\n\r\n\r\n注意`\"results\":null`这样的代码，可能会导致大家的success方法出错，原因很简单，jQuery YQLspider插件关注的是results这一对象，而JavaScript对undefined、null进行操作会报错！","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}